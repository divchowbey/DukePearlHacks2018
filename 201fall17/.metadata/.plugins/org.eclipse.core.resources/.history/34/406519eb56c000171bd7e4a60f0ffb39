
public class LinkStrand implements IDnaStrand {
	private class Node {
		String info;
		Node next;

		public Node(String s) {
			info = s;
			next = null;
		}
	}

	private Node myFirst, myLast;
	private long mySize;
	private int myAppends;
	private int myIndex;
	private int myLocalIndex;
	private Node myCurrent;

	public LinkStrand() {
		this("");
	}

	public LinkStrand(String a) {
		initialize(a);
	}

	@Override
	public long size() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void initialize(String source) {
		Node myNode = new Node(source);
		myFirst = myNode;
		myLast = myNode;
		myAppends = 0;
		myIndex = 0;
		myLocalIndex = 0;
		myCurrent = myFirst;

	}

	@Override
	public IDnaStrand getInstance(String source) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public IDnaStrand append(String dna) {
		Node myNode = new Node(dna);
		Node parse = myFirst;
		while (parse.next != null) {
			parse = parse.next;
		}
		parse.next = myNode;
		this.myLast = myNode;
		myAppends += 1;
		mySize += dna.length();
		return this;
	}

	@Override
	public IDnaStrand reverse() {
		Node parse = myFirst.next;
		StringBuilder copy = new StringBuilder(myFirst.info);
		copy.reverse();
		LinkStrand current = new LinkStrand(copy.toString());
		while (parse != null) {
			StringBuilder rev = new StringBuilder(parse.info);
			rev.reverse();
			Node newFirst = new Node(rev.toString());
			newFirst.next = current.myFirst;
			current.myFirst = newFirst;
			parse = parse.next;
		}

		return current;

	}

	@Override
	public int getAppendCount() {
		return myAppends;
	}

	@Override
	public char charAt(int index) {
		while (myIndex != index) {
			myIndex++;
			myLocalIndex++;
			if (myLocalIndex >= myCurrent.info.length()) {
				myLocalIndex = 0;
				myCurrent = myCurrent.next;
			}
		}
		return myCurrent.info.charAt(myLocalIndex);
	}

	public String toString() {
		Node a = myFirst;
		StringBuilder ret = new StringBuilder();
		while (a != null) {
			ret.append(a.info);
			a = a.next;
		}
		return ret.toString();
	}



}
